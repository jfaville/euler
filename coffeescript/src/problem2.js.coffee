assert = require('assert')

generalize = (func) -> (base, reducends...) -> reducends.reduce func, base
sum = generalize (a, b) -> a + b
union = generalize (a, b) -> a.concat (el for el in b when el not in a)

###
Even Fibonacci numbers

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
###


class CachedArray 
    constructor: (@_array = [], @calculate = -> 0) ->
    get: (a) -> @_array[a] ?= @calculate a
    set: (a, b) -> @_array[a] = b

x = 1
max = 4000000

#fib = new CachedArray [0, 1], (a) -> (@get a-1) + (@get a-2)
#console.log sum (fib.get(3*x++) until fib.get(3*x) >= max)...

evenFib = new CachedArray [0, 2], (a) -> 4*(@get a-1) + (@get a-2)
console.log sum (evenFib.get(x++) until evenFib.get(x) >= max)...

#Informed Method#